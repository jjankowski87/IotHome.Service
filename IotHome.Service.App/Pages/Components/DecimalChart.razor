@using Blazorise.Charts;
@using IotHome.Service.App.Models
@using IotHome.Service.Model

<LineChart @ref="_lineChart" TItem="decimal?" OptionsJsonString="@Options" />

@code {
    private static readonly string Options = "{\"legend\":{\"display\": false}}";

    private LineChart<decimal?> _lineChart;

    [Parameter]
    public IList<MyChartColor> Colors { get; set; }

    [Parameter]
    public IDictionary<CheckboxValue<string>, IList<SensorReading>> Data { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await RefreshChartAsync(Data);
        }
    }

    public async Task RefreshChartAsync(IDictionary<CheckboxValue<string>, IList<SensorReading>> data = null)
    {
        if (data != null)
        {
            Data = data;
        }

        _lineChart.Clear();

        if (Data.Any(cd => cd.Key.IsChecked))
        {
            AddLabels(Data.First().Value.Select(r => r.Date));

            var i = 0;
            foreach (var (key, readings) in Data)
            {
                if (key.IsChecked)
                {
                    AddData(readings.Select(r => r.Value), key.Value, Colors.Skip(i % Colors.Count).First());
                }

                i++;
            }
        }
        else
        {
            AddLabels(Enumerable.Empty<DateTimeOffset>());
            AddData(Enumerable.Empty<decimal?>(), string.Empty, Colors.First());
        }

        await _lineChart.Update();

    }

    private void AddLabels(IEnumerable<DateTimeOffset> labels)
    {
        _lineChart.AddLabel(labels.Select(l => l.ToString("yyyy-MM-dd HH:mm")).ToArray());
    }

    private void AddData(IEnumerable<decimal?> data, string header, MyChartColor color)
    {
        _lineChart.AddDataSet(new LineChartDataset<decimal?>
        {
            Label = header,
            Data = data.ToList(),
            BackgroundColor = new List<string> { color.Fill },
            BorderColor = new List<string> { color.Border },
            Fill = true,
            PointRadius = 2,
            BorderDash = new List<int>()
        });
    }
}
